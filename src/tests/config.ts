import { Config } from "./types.ts";

const TRACE_FETCH_CALLS = false;
const DEBUG_FETCH_CALLS = true;

enum ConfigEnvironment {
    DEBUG = "debug",
    ORY = "ory",
    PROD = "prod",
    HAPI = "hapi",
    REMOTE_HAPI = "remoteHapi",
    BLAZE = "blaze",
}

const CONFIG_ENV: ConfigEnvironment = ConfigEnvironment.DEBUG;

const debugConfig: Config = {
    clientId: "SAMPLE_CONFIDENTIAL_CLIENT_ID",
    clientSecret: "bu0WRo3HRiybq0bdw4YdMSR4lzu3paj3",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "http://localhost:3000/callback",
    authServerUrl: "https://deno.kessel.4pan.de/fhir/atollee/r4",
    fhirServerUrl: "https://deno.kessel.4pan.de/fhir/atollee/r4",
    validPatientId: "355",
    writableValidPatientId: "88",
    xmlSupported: false,
    turtleSupported: false,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: true,
    httpSupported: false,
    defaultPageSize: 20,
    paginationSupported: true,
    userName: "admin",
    password: "password",
    serverTimeZone: "Europe/Berlin",
    approximateSearchSupported: true,
    approximitySearchRange: 10,
    searchParameterCaseInsensitiveSupported: true,
    transactionSupported: true,
    traceFetchCalls: TRACE_FETCH_CALLS,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const prodConfig: Config = {
    clientId: "homepage-client",
    clientSecret: "AMwVlN6ZPP9NcMgiqfr9307A0KQuq97N",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "http://localhost:3000/callback",
    authServerUrl: "https://dev.atollee.com",
    fhirServerUrl: "https://dev.atollee.com",
    validPatientId: "355",
    writableValidPatientId: "88",
    xmlSupported: false,
    turtleSupported: false,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: true,
    httpSupported: false,
    defaultPageSize: 20,
    paginationSupported: true,
    userName: "test1",
    password: "testi",
    serverTimeZone: "Europe/Berlin",
    approximateSearchSupported: true,
    approximitySearchRange: 10,
    transactionSupported: true,
    traceFetchCalls: TRACE_FETCH_CALLS,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const oryConfig: Config = {
    clientId: "e15fa4f4-6f41-417b-ae8e-c8dd977cdf92",
    clientSecret: "UwAy8gFmrbn~-bWiL9A86g-sHr",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "http://localhost:3000/callback",
    authServerUrl: "https://test2.atollee.com/fhir/atollee/r4",
    fhirServerUrl: "https://test2.atollee.com/fhir/atollee/r4",
    validPatientId: "355",
    writableValidPatientId: "88",
    xmlSupported: false,
    turtleSupported: false,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: true,
    httpSupported: false,
    defaultPageSize: 20,
    paginationSupported: true,
    userName: "admin",
    password: "password",
    serverTimeZone: "Europe/Berlin",
    approximateSearchSupported: true,
    approximitySearchRange: 10,
    transactionSupported: true,
    traceFetchCalls: TRACE_FETCH_CALLS,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const hapiConfig: Config = {
    clientId: "e15fa4f4-6f41-417b-ae8e-c8dd977cdf92",
    clientSecret: "UwAy8gFmrbn~-bWiL9A86g-sHr",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "http://localhost:3000/callback",
    authServerUrl: "http://localhost:6066/fhir",
    fhirServerUrl: "http://localhost:6066/fhir",
    validPatientId: "355A",
    writableValidPatientId: "85A",
    xmlSupported: true,
    turtleSupported: true,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: false,
    httpSupported: false,
    defaultPageSize: 1000,
    paginationSupported: true,
    userName: "admin",
    password: "password",
    bundleTotalMandatory: false,
    textContentSearchSupported: false,
    multiTypeSupported: false,
    lenientSearchHandlingSupported: false,
    emptyParametersAllowed: false,
    paginationFirstRelationLinkSupported: false,
    paginationNextRelationLinkSupported: false,
    enforceDisallowingMultipleModifiers: false,
    locationAboveModifierSupported: false,
    canonicalUrlAboveModifierSupported: false,
    semverVersionComparisonSupported: false,
    hapiBugsDisallowed: false,
    aboveModifierOnSnomedCodeSystemsSupported: false,
    locationBelowModifierSupported: false,
    belowModifierOnSnomedCodeSystemsSupported: false,
    canonicalUrlBelowModifierSupported: false,
    belowModifierOnMimeTypesSupported: false,
    identifierCanonicalSearchSupported: false,
    identifierReferenceSearchSupported: false,
    notInModifierSnomedSystemSupported: false,
    ofTypeModifierSupported: false,
    fullTextSearchSupported: false,
    externalReferencesAllowed: false,
    showFetchResponses: false,
    approximateSearchSupported: false,
    locationContainsParameterSupported: false,
    locationNearParameterSupported: false,
    compositionSectionTextParameterSupported: false,
    rejectSearchWithAmbiguousResourceTypesSupported: false,
    hasForChainedSearchesSupported: false,
    recordFetchFailures: false,
    filterContainsOperatorSupported: false,
    multipleResourceTypeSearchSupported: false,
    implicitCodeSystemSearchSupported: false,
    expandOperationSupported: false,
    summarySearchParameterSupported: false,
    elementSearchParameterSupported: false,
    maxResultsSearchParameterSupported: false,
    relevantSortSupported: false,
    graphSearchParameterSupported: false,
    containedSearchesSupported: false,
    languageSearchParameterSupported: false,
    querySearchParameterSupported: false,
    sourceSearchParameterSupported: false,
    namedListSearchParameterSupported: false,
    ignoringUnknownParameters: false,
    serverTimeZone: "Europe/Berlin",
    absoluteUrlReferencesSupported: false,
    identifierModifierSupported: false,
    transactionSupported: false,
    traceFetchCalls: false,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const remoteHapiConfig: Config = {
    clientId: "e15fa4f4-6f41-417b-ae8e-c8dd977cdf92",
    clientSecret: "UwAy8gFmrbn~-bWiL9A86g-sHr",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "http://localhost:3000/callback",
    authServerUrl: "https://hapi.fhir.org/baseR4",
    fhirServerUrl: "https://hapi.fhir.org/baseR4",
    validPatientId: "355A",
    writableValidPatientId: "85A",
    xmlSupported: true,
    turtleSupported: true,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: false,
    httpSupported: false,
    defaultPageSize: 500,
    paginationSupported: true,
    userName: "admin",
    password: "password",
    bundleTotalMandatory: false,
    textContentSearchSupported: false,
    multiTypeSupported: false,
    lenientSearchHandlingSupported: false,
    emptyParametersAllowed: false,
    paginationFirstRelationLinkSupported: false,
    paginationNextRelationLinkSupported: false,
    enforceDisallowingMultipleModifiers: false,
    locationAboveModifierSupported: false,
    canonicalUrlAboveModifierSupported: false,
    semverVersionComparisonSupported: false,
    hapiBugsDisallowed: false,
    aboveModifierOnSnomedCodeSystemsSupported: false,
    locationBelowModifierSupported: false,
    belowModifierOnSnomedCodeSystemsSupported: false,
    canonicalUrlBelowModifierSupported: false,
    belowModifierOnMimeTypesSupported: false,
    identifierCanonicalSearchSupported: false,
    identifierReferenceSearchSupported: false,
    notInModifierSnomedSystemSupported: false,
    ofTypeModifierSupported: false,
    fullTextSearchSupported: false,
    externalReferencesAllowed: false,
    showFetchResponses: false,
    approximateSearchSupported: false,
    locationContainsParameterSupported: false,
    locationNearParameterSupported: false,
    compositionSectionTextParameterSupported: false,
    rejectSearchWithAmbiguousResourceTypesSupported: false,
    hasForChainedSearchesSupported: false,
    recordFetchFailures: false,
    filterContainsOperatorSupported: false,
    multipleResourceTypeSearchSupported: false,
    implicitCodeSystemSearchSupported: false,
    expandOperationSupported: false,
    summarySearchParameterSupported: false,
    elementSearchParameterSupported: false,
    maxResultsSearchParameterSupported: false,
    relevantSortSupported: false,
    graphSearchParameterSupported: false,
    containedSearchesSupported: false,
    languageSearchParameterSupported: false,
    querySearchParameterSupported: false,
    sourceSearchParameterSupported: false,
    namedListSearchParameterSupported: false,
    ignoringUnknownParameters: false,
    serverTimeZone: "Europe/Berlin",
    absoluteUrlReferencesSupported: false,
    identifierModifierSupported: false,
    transactionSupported: false,
    traceFetchCalls: false,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const blazeConfig: Config = {
    clientId: "e15fa4f4-6f41-417b-ae8e-c8dd977cdf92",
    clientSecret: "UwAy8gFmrbn~-bWiL9A86g-sHr",
    scope: "patient/*.read patient/*.write launch/patient",
    redirectUri: "https://blaze.kessel.4pan.de/callback",
    authServerUrl: "https://blaze.kessel.4pan.de/fhir",
    fhirServerUrl: "https://blaze.kessel.4pan.de/fhir",
    validPatientId: "355A",
    writableValidPatientId: "85A",
    xmlSupported: true,
    turtleSupported: true,
    clientDefinedIdsAllowed: true,
    referentialIntegritySupported: false,
    referencesAreVersionSpecific: false,
    authorized: false,
    httpSupported: false,
    defaultPageSize: 1000,
    paginationSupported: true,
    userName: "admin",
    password: "password",
    serverTimeZone: "Europe/Berlin",
    approximateSearchSupported: true,
    approximitySearchRange: 10,
    searchParameterCaseInsensitiveSupported: true,
    transactionSupported: true,
    traceFetchCalls: TRACE_FETCH_CALLS,
    debugFetchCalls: DEBUG_FETCH_CALLS,
};

const determineConfig: (env: ConfigEnvironment) => Config = (env) => {
    switch (env) {
        case "debug":
            return debugConfig;
        case "ory":
            return oryConfig;
        case "prod":
            return prodConfig;
        case "hapi":
            return hapiConfig;
        case "remoteHapi":
            return remoteHapiConfig;
        case "blaze":
            return blazeConfig;
    }

    return debugConfig;
};

export const CONFIG = determineConfig(CONFIG_ENV);
